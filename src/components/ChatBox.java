/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package components;

import Engine.Driver.Client;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
import packets.MessageLoadPacket;
import packets.MessagePacket;
import packets.TextMessagePacket;

/**
 *
 * @author hirosume
 */
public class ChatBox extends javax.swing.JPanel {

	public static int id = -1;
	Client client;
	JPanel list = new JPanel();
	List<Message> messages = new ArrayList();

	/**
	 * Creates new form ChatBox
	 */
	public ChatBox(int id, Client client) {
		ChatBox.id = id;
		this.client = client;
		initComponents();
		init();
	}

	private void init() {
		this.list.setLayout(new BoxLayout(list, BoxLayout.Y_AXIS));
//		this.list.setLayout(new GridLayout());
		this.list.setBackground(Color.WHITE);
		this.loadMessage();

	}

	private void loadMessage() {
		if (id == -1) {
			return;
		}
		client.send(new MessageLoadPacket(id));
	}

	private void sendMessage() {
		if (id != -1) {
			String message = this.textInput.getText();
			TextMessagePacket packet = new TextMessagePacket();
			packet.id_room = id;
			packet.date = new Date();
			packet.content = message;
			client.send(packet);

		}
	}

	public void initMessage(List<MessagePacket> messages, String currentUser) {
		this.messages = messages.stream().map(i -> convert(i, currentUser)).collect(Collectors.toList());
		this.render();
	}

	public void addMessage(MessagePacket m, String currentUser) {
		Message ms = convert(m, currentUser);
		this.messages.add(ms);
		this.render();
	}

	private Message convert(MessagePacket pk, String currentUser) {
		TextMessagePacket p = (TextMessagePacket) pk;
		if (currentUser.equals(pk.sender)) {
			RightMessage ms = new RightMessage(p.content,pk.sender);
			return ms;
		} else {
			LeftMessage ms = new LeftMessage(p.content,pk.sender);
			return ms;

		}
	}

	private void render() {
		this.list.removeAll();
		messages.forEach(m -> {

			if (m instanceof LeftMessage) {
				this.list.add((LeftMessage) m);
			} else {
				this.list.add((RightMessage) m);
			}
		});
		this.revalidate();
		this.repaint();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textInput = new javax.swing.JTextArea();
        sendButton = new javax.swing.JButton();
        chatBoxContainer = new javax.swing.JScrollPane(list);

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textInput.setColumns(20);
        textInput.setRows(5);
        jScrollPane1.setViewportView(textInput);

        sendButton.setText("Gá»­i");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        chatBoxContainer.setToolTipText("");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chatBoxContainer)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton)))
                .addGap(20, 20, 20))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chatBoxContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel8);
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
		// TODO add your handling code here:
		this.sendMessage();
    }//GEN-LAST:event_sendButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane chatBoxContainer;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextArea textInput;
    // End of variables declaration//GEN-END:variables
}
